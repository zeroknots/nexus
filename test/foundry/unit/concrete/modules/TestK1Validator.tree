TestK1Validator
├── when setting up the testing environment
│   └── it should deploy the contract and initialize variables
├── when testing the onInstall function
│   ├── it should succeed with valid initialization data
│   └── it should revert with no owner provided
├── when testing the onUninstall function
│   └── it should remove the owner
├── when testing the isInitialized function
│   └── it should check if the smart account is initialized
├── when testing the validateUserOp function
│   ├── it should succeed with a valid signature (toEthSignedMessageHash)
│   └── it should fail with an invalid signature
│   └── signature malleability should be rejected because of nonce
├── when testing the isValidSignatureWithSender function
│   ├── it should succeed with a valid signature
│   └── it should fail with an invalid signature
│   └── it should succeed with a valid signature for isValidSignatureWithSender
│   └── it should fail with an inverted 's' value for isValidSignatureWithSender
├── when testing the transferOwnership function
│   ├── it should transfer ownership to a new address
│   └── it should revert when transferring to the zero address
│   └── it should revert when transferring to a contract address
├── when testing the name function
│   └── it should return the correct contract name
├── when testing the version function
│   └── it should return the correct contract version
└── when testing the isModuleType function
    ├── it should return true for VALIDATOR module type
    └── it should return false for an invalid module type
├── when testing the addSafeSender function
│   └── it should add a safe sender to the safe senders list
├── when testing the removeSafeSender function
│   └── it should remove a safe sender from the safe senders list
├── when testing the fillSafeSenders function
│   └── it should fill the safe senders list
├── when testing the isSafeSender function
│   └── it should check if a sender is in the safe senders list
